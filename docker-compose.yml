version: "3.7"

services:
  grafana:
    restart: always
    container_name: grafana
    image: "grafana/grafana:latest"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
  loki:
    restart: always
    container_name: loki
    image: "grafana/loki:latest"
    ports:
      - "3100:3100"
    depends_on:
    - grafana
  web_admin:
    restart: always
    container_name: web_admin
    build: .
    command: >
      bash -c "python manage.py migrate && uvicorn main.asgi:application --host 0.0.0.0 --reload --log-level info"
    volumes:
      - ./main:/main/
    ports:
      - "8000:8000"
    env_file:
      - ".env"
    logging: #  docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    depends_on:
    - loki
  tgbot:
    container_name: bot
    build: .
    command: python3 manage.py run_bot
    restart: always
    env_file:
      - ".env"
    volumes:
     - ./main:/main/
    depends_on:
    - web_admin
    - redis
    - loki
    - db_postgresql
    logging:  #  docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
  redis:
    image: redis:alpine3.20
    ports:
      - '6379:6379'
  celery:
    image: celery:4.0.2
    container_name: celery
    restart: always
    build: .
    command: bash -c "celery -A main worker -l info"
    env_file:
      - ".env"
    depends_on:
      - redis
      - web_admin
      - db_postgresql
  flower:
    restart: always
    container_name: flower
    build: .
    image: celery:4.0.2
    ports:
      - '5555:5555'
    command: bash -c "celery -A main flower --port=5555"
    env_file:
      - ".env"
    depends_on:
      - redis
      - web_admin
      - celery
      - db_postgresql
  db_postgresql:
    container_name: postgresql
    env_file:
       - ".env"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    image: postgres:16.3-alpine3.20
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


networks:
  botnet:
    driver: bridge

